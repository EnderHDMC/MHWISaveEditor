//------------------------------------------------
//--- 010 Editor v12.0.1 Script File
//
//      File: allow_layered_crafts.1sc
//   Authors: EnderHDMC
//   Version: 0.1.3
//   Purpose: Allow all layered armors to be crafted.
//            Optionally give resources to craft them.
//  Category: Game
//   History: Initial Version
//------------------------------------------------

u32 target_save = 2;
u32 give_items = true;
u32 give_zeni_research = true;

u32 items[3200] = {
     0,   205,   206,   207,   208,   209,   210,   211,   212,   213,
   214,   215,   216,   217,   218,   219,   225,   226,   227,   228,
   229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
   239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
   249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
   259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
   269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
   279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
   289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
   299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
   309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
   319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
   329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
   339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
   349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
   359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
   369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
   379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
   389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
   399,   400,   401,   402,   404,   405,   406,   407,   408,   409,
   410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
   420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
   430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
   440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
   450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
   460,   461,   462,   463,   464,   465,   467,   468,   469,   470,
   472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
   482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
   492,   493,   494,   495,   496,   497,   498,   500,   501,   502,
   503,   504,   505,   506,   507,   508,   509,   510,   511,   513,
   514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
   524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
   534,   535,   536,   538,   577,   578,   579,   580,   581,   582,
   583,   584,   585,   586,   587,   588,   589,   590,   591,   871,
   879,   880,   881,   882,   883,   884,   885,   886,   887,   888,
   889,   890,   891,   892,   895,   896,   897,   898,   899,   900,
   901,   902,   903,   904,   905,   906,   907,   908,   909,   910,
   911,   912,   913,   914,   915,   916,   917,   918,   919,   920,
   921,   922,   923,   924,   925, /*927,*/ 929,   930,   931,   933,   // 927 = HARDUMMY
   934,   939,   955,   965,   969,   970,   971,   972,   975, /*976,*/ // 976 = HARDUMMY
   978,   979,   980,   981,   982,   983,   984,   987,   988,  1030,
  1031,  1032,  1034,  1036,  1037,  1042,  1043,  1044,  1048,  1049,
  1050,  1051,  1053,  1054,  1055,  1056,  1057,  1058,  1059,  1060,
  1061,  1062,  1063,  1064,  1065,  1066,  1068,  1069,  1071,  1073,
  1075,  1076,  1077,  1078,  1080,  1081,  1083,  1085,  1087,  1089,
  1091,  1093,  1094,  1095,  1096,  1097,  1098,  1099,  1100,  1101,
  1102,  1103,  1104,  1105,  1106,  1107,  1108,  1109,  1110,  1111,
  1112,  1113,  1114,  1115,  1116,  1117,  1118,  1119,  1120,  1121,
  1122,  1123,  1124,  1125,  1126,  1127,  1128,  1129,  1130,  1131,
  1132,  1133,  1134,  1135,  1136,  1137,  1138,  1139,  1140,  1141,
  1142,  1143,  1144,  1145,  1146,  1147,  1148,  1149,  1150,  1151,
  1152,  1153,  1154,  1155,  1156,  1157,  1158,  1159,  1160,  1161,
  1162,  1163,  1164,  1165,  1166,  1167,  1168,  1169,  1170,  1171,
  1172,  1173,  1174,  1175,  1176,  1177,  1178,  1179,  1180,  1181,
  1182,  1183,  1184,  1185,  1186,  1188,  1189,  1190,  1193,  1194,
  1195,  1196,  1197,  1198,  1199,  1200,  1201,  1202,  1203,  1204,
  1205,  1206,  1207,  1208,  1209,  1210,  1211,  1212,  1213,  1214,
  1215,  1216,  1217,  1218,  1219,  1220,  1221,  1222,  1223,  1224,
  1225,  1226,  1227,  1228,  1229,  1230,  1231,  1232,  1233,  1234,
  1235,  1236,  1237,  1238,  1239,  1240,  1241,  1242,  1243,  1244,
  1245,  1246,  1247,  1248,  1249,  1250,  1251,  1252,  1253,  1254,
  1255,  1256,  1257,  1258,  1259,  1260,  1261,  1262,  1263,  1264,
  1265,  1266,  1267,  1268,  1269,  1270,  1271,  1272,  1273,  1274,
  1275,  1276,  1277,  1279,  1280,  1281,  1282,  1283,  1284,  1285,
  1286,  1287,  1288,  1289,  1290,  1291,  1292,  1293,  1294,  1295,
  1296,  1297,  1298,  1299,  1300,  1301,  1302,  1303,  1304,  1305,
  1306,  1307,  1308,  1309,  1310,  1311,  1312,  1313,  1314,  1315,
  1316,  1317,  1318,  1319,  1320,  1321,  1323,  1324,  1325,  1326,
  1327,  1328,  1329,  1330,  1331,  1332,  1333,  1334,  1335,  1336,
  1337,  1338,  1339,  1340,  1341,  1342,  1343,  1344,  1345,  1346,
  1347,  1348,  1349,  1350,  1351,  1352,  1353,  1354,  1355,  1356,
  1357,  1358,  1359,  1360,  1361,  1362,  1363,  1364,  1365,  1366,
  1367,  1368,  1369,  1370,  1371,  1372,  1373,  1374,  1375,  1376,
  1377,  1378,  1379,  1380,  1382,  1383,  1384,  1385,  1387,  1388,
  1389,  1390,  1391,  1392,  1393,  1394,  1395,  1396,  1398,  1399,
  1400,  1401,  1402,  1403,  1404,  1405,  1406,  1407,  1408,  1415,
  1423,  1424,  1425,  1426,  1427,  1428,  1432,  1433,  1434,  1435,
  1436,  1437,  1438,  1439,  1440,  1441,  1442,  1445,  1790,  1791,
  1795,  1796,  1797,  1798,  1799,  1800,  1801,  1802,  1803,  1804,
  1805,  1806,  1807,  1808,  1809,  1810,  1811,  1812,  1813,  1814,
  1815,  1816,  1817,  1818,  1819,  1820,  1821,  1822,  1823,  1824,
  1825,  1826,  1827,  1828,  1829,  1830,  1831,  1832,  1833,  1834,
  1835,  1836,  1837,  1838,  1840,  1841,  1842,  1843,  1844,  1845,
  1846,  1848,  1849,  1850,  1853,  1854,  1856,  1858,  1859,  1861,
  1862,  1863,  1868,  1869,  1871,  1873,  1874,  1875,  1877,  1878,
  1879,  1880,  1881,  1882,  1884,  1885,  1887,  1888,  1890,  1891,
  1892,  1894,  1895,  1896,  1897,  1899,  1901,  1902,  1903,  1905,
  1906,  1907,  1909,  1910,  1911,  1912,  1913,  1914,  1915,  1916,
  1917,  1919,  1921,  1923,  1925,  1927,  1929,  1931,  1932,  1933,
  1934,  1935,  1936,  1937,  1938,  1939,  1940,  1941,  1942,  1943,
  1945,  1946,  1947,  1949,  1950,  1951,  1953,  1955,  1957,  1959,
  1966,  2676,  2679,  2681,  2682,  2701,  2702,  2703,  2706,/*2708,*/ // 2708 = HARDUMMY
/*2709,*/2710,  2711,  2712,  2713,  2715,  2716,  2719,  2720,  2721,   // 2709 = HARDUMMY
  2723,  2724,  2725,  2727,  2728,  2729,  2732,  2735,  2736,  2737,
  2738,  2739,  2756,  2757,  2758,  2759,  2760,  2761,  2762,  2763,
  2764,  2765,  2768,  2769,  2770,  2771
};

u32 i, cur;
u32 count = sizeof(items) / sizeof(items[0]);

u32 fsp = -1;
u32 fs, fsi;
u8 buffer;

for (i = 0; i < count; i++) {
  cur = items[i];
  if (!cur && i != 0) continue;

  fs = cur / 8;
  fsi = cur % 8;
  if (fs != fsp) Printf("\n%d:", fs);
  fsp = fs;

  Printf(" %d", cur);
  buffer = mhw_save.section3.saves[target_save].discovered_items[fs];
  Printf(" '%02x->", buffer);
  buffer |= 1 << fsi;
  Printf("%02x'", buffer);
  
  if (cur) mhw_save.section3.saves[target_save].discovered_items[fs] = buffer;
}
Printf("\nDone!\n");



i32 x, y;
u32 mats = sizeof(mhw_save.section3.saves[target_save].storage.materials)
         / sizeof(mhw_save.section3.saves[target_save].storage.materials[0]);
u32 item_id, item_count;
u32 add_item, add_index = 0;

for (y = 0; y < count; y++)
{
  add_item = items[y];
  if (y && !add_item) break;

  for (x = 0; x < mats; x++) {
    item_id = mhw_save.section3.saves[target_save].storage.materials[x].id;
    item_count = mhw_save.section3.saves[target_save].storage.materials[x].amount;

    if (!add_index && item_id == 0) add_index = x;

    if (item_id == add_item) {
      add_index = 0;
      break;
    }
  }

  if (add_index) {
    if (give_items) {
    mhw_save.section3.saves[target_save].storage.materials[add_index].id = add_item;
    mhw_save.section3.saves[target_save].storage.materials[add_index].amount = 9999;
    Printf("Added %d at materials[%d]\n", add_item, add_index);
    }
    else {
      Printf("Need item id: %d\n", add_item);
    }
    add_index = 0;
  }
}

if (give_zeni_research) {
  mhw_save.section3.saves[target_save].hunter.zeni = 99999999;
  mhw_save.section3.saves[target_save].hunter.research_points = 99999999;
}
Printf("Done!");
